syntax = "proto3";

option go_package = ".;proto";

// 生成代码：
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative relation.proto
service relation{
  rpc follow(FollowRequest) returns (FollowResponse);
  rpc followList(FollowListRequest) returns (FollowListResponse);
  rpc followerList(FollowerListRequest) returns (FollowerListResponse);
  rpc friendList(FriendListRequest) returns (FriendListResponse);
}

message FollowRequest {
  int64 user_id = 1; // 用户id
  int64 to_user_id = 2; // 对方用户id
  int32 action_type = 3; // 1-关注，2-取消关注
}

message FollowResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
}

message FollowListRequest {
  int64 user_id = 1; // 用户id
}

message FollowListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated int64 user_list = 3; // 用户id列表
}


message FollowerListRequest {
  int64 user_id = 1; // 用户id
}

message FollowerListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated int64 user_list = 3; // 用户id列表
}

message FriendListRequest {
  int64 user_id = 1; // 用户id
}

message FriendListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated int64 user_list = 3; // 用户列表
}
