syntax = "proto3";

option go_package = ".;proto";

// 生成代码：
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative chat.proto
service chat{
  rpc message_action(MessageRequest) returns (MessageResponse);
  rpc message_history(MessageListRequest) returns (MessageListResponse);
}

message MessageListRequest {
  int64 user_id = 1; // 用户id
  int64 to_user_id = 2; // 对方用户id
}

message MessageListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated Message message_list = 3; // 消息列表
}

message Message {
  int64 id = 1; // 消息id
  int64 user_id = 2; //用户id
  int64 to_user_id = 3; // 对方用户id
  string content = 4; // 消息内容
  string create_time = 5; // 消息创建时间
}

message MessageRequest {
  int64 user_id = 1; // 用户id
  int64 to_user_id = 2; // 对方用户id
  int32 action_type = 3; // 1-发送消息
  string content = 4; // 消息内容
}

message MessageResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
}