syntax = "proto3";

option go_package = ".;proto";

// 生成代码：
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative user.proto
service User{
  rpc login (LoginRequest) returns (LoginResponse);
  rpc register (RegisterRequest) returns (RegisterResponse);
}

message LoginRequest {
  string username = 1; // 登录用户名
  string password = 2; // 登录密码
}

message LoginResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  int64 user_id = 3; // 用户id
  string token = 4; // 用户鉴权token
}

message RegisterRequest {
  string username = 1; // 注册用户名，最长32个字符
  string password = 2; // 密码，最长32个字符
}

message RegisterResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  int64 user_id = 3; // 用户id
  string token = 4; // 用户鉴权token
}