syntax = "proto3";

option go_package = ".;proto";

// 生成代码：
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative comment.proto
service comment{
  rpc comment(CommentRequest) returns (CommentResponse);
  rpc comment_list(CommentListRequest) returns (CommentListResponse);
}

message CommentRequest {
  int64 user_id = 1; // 用户鉴权token
  int64 video_id = 2; // 视频id
  int32 action_type = 3; // 1-发布评论，2-删除评论
  string comment_text = 4; // 用户填写的评论内容，在action_type=1的时候使用
  int64 comment_id = 5; // 要删除的评论id，在action_type=2的时候使用
}

message CommentResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  Comment comment = 3; // 评论成功返回评论内容，不需要重新拉取整个列表
}

message Comment {
  int64 id = 1; // 视频评论id
  int64 user = 2; // 评论用户信息
  string content = 3; // 评论内容
  int64 create_date = 4; // 评论发布日期，格式 mm-dd
}

message CommentListRequest {
  int64 user_id = 1; // 用户鉴权token
  int64 video_id = 2; // 视频id
}

message CommentListResponse {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated Comment comment_list = 3; // 评论列表
}

